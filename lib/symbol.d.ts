import * as React from 'react';
import * as PropTypes from 'prop-types';
import { FileFormat1 as FileFormat } from '@sketch-hq/sketch-file-format-ts';
import { SketchDocumentData, SketchDocument, WrappedSketchDocument } from './types';
export declare const injectSymbols: (document?: SketchDocument | SketchDocumentData | WrappedSketchDocument | undefined) => void;
declare const SymbolInstancePropTypes: {
    style: PropTypes.Requireable<PropTypes.InferProps<{
        color: PropTypes.Requireable<string | number>;
        shadowColor: PropTypes.Requireable<string | number>;
        shadowInner: PropTypes.Requireable<boolean>;
        shadowSpread: PropTypes.Requireable<number>;
        shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
            width: PropTypes.Requireable<number>;
            height: PropTypes.Requireable<number>;
        }>>;
        shadowOpacity: PropTypes.Requireable<number>;
        shadowRadius: PropTypes.Requireable<number>;
        width: PropTypes.Requireable<number>;
        height: PropTypes.Requireable<number>;
        top: PropTypes.Requireable<number>;
        left: PropTypes.Requireable<number>;
        right: PropTypes.Requireable<number>;
        bottom: PropTypes.Requireable<number>;
        minWidth: PropTypes.Requireable<number>;
        maxWidth: PropTypes.Requireable<number>;
        minHeight: PropTypes.Requireable<number>;
        maxHeight: PropTypes.Requireable<number>;
        margin: PropTypes.Requireable<number>;
        marginVertical: PropTypes.Requireable<number>;
        marginHorizontal: PropTypes.Requireable<number>;
        marginTop: PropTypes.Requireable<number>;
        marginBottom: PropTypes.Requireable<number>;
        marginLeft: PropTypes.Requireable<number>;
        marginRight: PropTypes.Requireable<number>;
        padding: PropTypes.Requireable<number>;
        paddingVertical: PropTypes.Requireable<number>;
        paddingHorizontal: PropTypes.Requireable<number>;
        paddingTop: PropTypes.Requireable<number>;
        paddingBottom: PropTypes.Requireable<number>;
        paddingLeft: PropTypes.Requireable<number>;
        paddingRight: PropTypes.Requireable<number>;
        position: PropTypes.Requireable<string>;
        flexDirection: PropTypes.Requireable<string>;
        flexWrap: PropTypes.Requireable<string>;
        justifyContent: PropTypes.Requireable<string>;
        alignItems: PropTypes.Requireable<string>;
        alignSelf: PropTypes.Requireable<string>;
        overflow: PropTypes.Requireable<string>;
        overflowX: PropTypes.Requireable<string>;
        overflowY: PropTypes.Requireable<string>;
        flex: PropTypes.Requireable<number>;
        flexGrow: PropTypes.Requireable<number>;
        flexShrink: PropTypes.Requireable<number>;
        flexBasis: PropTypes.Requireable<number>;
        aspectRatio: PropTypes.Requireable<number>;
        zIndex: PropTypes.Requireable<number>;
        backfaceVisibility: PropTypes.Requireable<string>;
        backgroundColor: PropTypes.Requireable<string | number>;
        borderColor: PropTypes.Requireable<string | number>;
        borderTopColor: PropTypes.Requireable<string | number>;
        borderRightColor: PropTypes.Requireable<string | number>;
        borderBottomColor: PropTypes.Requireable<string | number>;
        borderLeftColor: PropTypes.Requireable<string | number>;
        borderRadius: PropTypes.Requireable<number>;
        borderTopLeftRadius: PropTypes.Requireable<number>;
        borderTopRightRadius: PropTypes.Requireable<number>;
        borderBottomLeftRadius: PropTypes.Requireable<number>;
        borderBottomRightRadius: PropTypes.Requireable<number>;
        borderStyle: PropTypes.Requireable<string>;
        borderTopStyle: PropTypes.Requireable<string>;
        borderRightStyle: PropTypes.Requireable<string>;
        borderBottomStyle: PropTypes.Requireable<string>;
        borderLeftStyle: PropTypes.Requireable<string>;
        borderWidth: PropTypes.Requireable<number>;
        borderTopWidth: PropTypes.Requireable<number>;
        borderRightWidth: PropTypes.Requireable<number>;
        borderBottomWidth: PropTypes.Requireable<number>;
        borderLeftWidth: PropTypes.Requireable<number>;
        opacity: PropTypes.Requireable<number>;
        transform: PropTypes.Requireable<string>;
        transformOrigin: PropTypes.Requireable<string>;
    }>>;
    name: PropTypes.Requireable<string>;
    overrides: PropTypes.Requireable<{
        [x: string]: string | ((...args: any[]) => any) | null | undefined;
    }>;
    resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
        top: PropTypes.Requireable<boolean>;
        right: PropTypes.Requireable<boolean>;
        bottom: PropTypes.Requireable<boolean>;
        left: PropTypes.Requireable<boolean>;
        fixedHeight: PropTypes.Requireable<boolean>;
        fixedWidth: PropTypes.Requireable<boolean>;
    }>>;
};
export declare type SymbolInstanceProps = PropTypes.InferProps<typeof SymbolInstancePropTypes>;
export declare const createSymbolInstanceClass: (symbolMaster: FileFormat.SymbolMaster) => {
    new (props: Readonly<PropTypes.InferProps<{
        style: PropTypes.Requireable<PropTypes.InferProps<{
            color: PropTypes.Requireable<string | number>;
            shadowColor: PropTypes.Requireable<string | number>;
            shadowInner: PropTypes.Requireable<boolean>;
            shadowSpread: PropTypes.Requireable<number>;
            shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
            }>>;
            shadowOpacity: PropTypes.Requireable<number>;
            shadowRadius: PropTypes.Requireable<number>;
            width: PropTypes.Requireable<number>;
            height: PropTypes.Requireable<number>;
            top: PropTypes.Requireable<number>;
            left: PropTypes.Requireable<number>;
            right: PropTypes.Requireable<number>;
            bottom: PropTypes.Requireable<number>;
            minWidth: PropTypes.Requireable<number>;
            maxWidth: PropTypes.Requireable<number>;
            minHeight: PropTypes.Requireable<number>;
            maxHeight: PropTypes.Requireable<number>;
            margin: PropTypes.Requireable<number>;
            marginVertical: PropTypes.Requireable<number>;
            marginHorizontal: PropTypes.Requireable<number>;
            marginTop: PropTypes.Requireable<number>;
            marginBottom: PropTypes.Requireable<number>;
            marginLeft: PropTypes.Requireable<number>;
            marginRight: PropTypes.Requireable<number>;
            padding: PropTypes.Requireable<number>;
            paddingVertical: PropTypes.Requireable<number>;
            paddingHorizontal: PropTypes.Requireable<number>;
            paddingTop: PropTypes.Requireable<number>;
            paddingBottom: PropTypes.Requireable<number>;
            paddingLeft: PropTypes.Requireable<number>;
            paddingRight: PropTypes.Requireable<number>;
            position: PropTypes.Requireable<string>;
            flexDirection: PropTypes.Requireable<string>;
            flexWrap: PropTypes.Requireable<string>;
            justifyContent: PropTypes.Requireable<string>;
            alignItems: PropTypes.Requireable<string>;
            alignSelf: PropTypes.Requireable<string>;
            overflow: PropTypes.Requireable<string>;
            overflowX: PropTypes.Requireable<string>;
            overflowY: PropTypes.Requireable<string>;
            flex: PropTypes.Requireable<number>;
            flexGrow: PropTypes.Requireable<number>;
            flexShrink: PropTypes.Requireable<number>;
            flexBasis: PropTypes.Requireable<number>;
            aspectRatio: PropTypes.Requireable<number>;
            zIndex: PropTypes.Requireable<number>;
            backfaceVisibility: PropTypes.Requireable<string>;
            backgroundColor: PropTypes.Requireable<string | number>;
            borderColor: PropTypes.Requireable<string | number>;
            borderTopColor: PropTypes.Requireable<string | number>;
            borderRightColor: PropTypes.Requireable<string | number>;
            borderBottomColor: PropTypes.Requireable<string | number>;
            borderLeftColor: PropTypes.Requireable<string | number>;
            borderRadius: PropTypes.Requireable<number>;
            borderTopLeftRadius: PropTypes.Requireable<number>;
            borderTopRightRadius: PropTypes.Requireable<number>;
            borderBottomLeftRadius: PropTypes.Requireable<number>;
            borderBottomRightRadius: PropTypes.Requireable<number>;
            borderStyle: PropTypes.Requireable<string>;
            borderTopStyle: PropTypes.Requireable<string>;
            borderRightStyle: PropTypes.Requireable<string>;
            borderBottomStyle: PropTypes.Requireable<string>;
            borderLeftStyle: PropTypes.Requireable<string>;
            borderWidth: PropTypes.Requireable<number>;
            borderTopWidth: PropTypes.Requireable<number>;
            borderRightWidth: PropTypes.Requireable<number>;
            borderBottomWidth: PropTypes.Requireable<number>;
            borderLeftWidth: PropTypes.Requireable<number>;
            opacity: PropTypes.Requireable<number>;
            transform: PropTypes.Requireable<string>;
            transformOrigin: PropTypes.Requireable<string>;
        }>>;
        name: PropTypes.Requireable<string>;
        overrides: PropTypes.Requireable<{
            [x: string]: string | ((...args: any[]) => any) | null | undefined;
        }>;
        resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
            top: PropTypes.Requireable<boolean>;
            right: PropTypes.Requireable<boolean>;
            bottom: PropTypes.Requireable<boolean>;
            left: PropTypes.Requireable<boolean>;
            fixedHeight: PropTypes.Requireable<boolean>;
            fixedWidth: PropTypes.Requireable<boolean>;
        }>>;
    }>>): {
        render(): JSX.Element;
        context: any;
        setState<K extends never>(state: {} | ((prevState: Readonly<{}>, props: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>) => {} | Pick<{}, K> | null) | Pick<{}, K> | null, callback?: (() => void) | undefined): void;
        forceUpdate(callback?: (() => void) | undefined): void;
        readonly props: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>> & Readonly<{
            children?: React.ReactNode;
        }>;
        state: Readonly<{}>;
        refs: {
            [key: string]: React.ReactInstance;
        };
        componentDidMount?(): void;
        shouldComponentUpdate?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextState: Readonly<{}>, nextContext: any): boolean;
        componentWillUnmount?(): void;
        componentDidCatch?(error: Error, errorInfo: React.ErrorInfo): void;
        getSnapshotBeforeUpdate?(prevProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, prevState: Readonly<{}>): any;
        componentDidUpdate?(prevProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, prevState: Readonly<{}>, snapshot?: any): void;
        componentWillMount?(): void;
        UNSAFE_componentWillMount?(): void;
        componentWillReceiveProps?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextContext: any): void;
        UNSAFE_componentWillReceiveProps?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextContext: any): void;
        componentWillUpdate?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextState: Readonly<{}>, nextContext: any): void;
        UNSAFE_componentWillUpdate?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextState: Readonly<{}>, nextContext: any): void;
    };
    new (props: PropTypes.InferProps<{
        style: PropTypes.Requireable<PropTypes.InferProps<{
            color: PropTypes.Requireable<string | number>;
            shadowColor: PropTypes.Requireable<string | number>;
            shadowInner: PropTypes.Requireable<boolean>;
            shadowSpread: PropTypes.Requireable<number>;
            shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
            }>>;
            shadowOpacity: PropTypes.Requireable<number>;
            shadowRadius: PropTypes.Requireable<number>;
            width: PropTypes.Requireable<number>;
            height: PropTypes.Requireable<number>;
            top: PropTypes.Requireable<number>;
            left: PropTypes.Requireable<number>;
            right: PropTypes.Requireable<number>;
            bottom: PropTypes.Requireable<number>;
            minWidth: PropTypes.Requireable<number>;
            maxWidth: PropTypes.Requireable<number>;
            minHeight: PropTypes.Requireable<number>;
            maxHeight: PropTypes.Requireable<number>;
            margin: PropTypes.Requireable<number>;
            marginVertical: PropTypes.Requireable<number>;
            marginHorizontal: PropTypes.Requireable<number>;
            marginTop: PropTypes.Requireable<number>;
            marginBottom: PropTypes.Requireable<number>;
            marginLeft: PropTypes.Requireable<number>;
            marginRight: PropTypes.Requireable<number>;
            padding: PropTypes.Requireable<number>;
            paddingVertical: PropTypes.Requireable<number>;
            paddingHorizontal: PropTypes.Requireable<number>;
            paddingTop: PropTypes.Requireable<number>;
            paddingBottom: PropTypes.Requireable<number>;
            paddingLeft: PropTypes.Requireable<number>;
            paddingRight: PropTypes.Requireable<number>;
            position: PropTypes.Requireable<string>;
            flexDirection: PropTypes.Requireable<string>;
            flexWrap: PropTypes.Requireable<string>;
            justifyContent: PropTypes.Requireable<string>;
            alignItems: PropTypes.Requireable<string>;
            alignSelf: PropTypes.Requireable<string>;
            overflow: PropTypes.Requireable<string>;
            overflowX: PropTypes.Requireable<string>;
            overflowY: PropTypes.Requireable<string>;
            flex: PropTypes.Requireable<number>;
            flexGrow: PropTypes.Requireable<number>;
            flexShrink: PropTypes.Requireable<number>;
            flexBasis: PropTypes.Requireable<number>;
            aspectRatio: PropTypes.Requireable<number>;
            zIndex: PropTypes.Requireable<number>;
            backfaceVisibility: PropTypes.Requireable<string>;
            backgroundColor: PropTypes.Requireable<string | number>;
            borderColor: PropTypes.Requireable<string | number>;
            borderTopColor: PropTypes.Requireable<string | number>;
            borderRightColor: PropTypes.Requireable<string | number>;
            borderBottomColor: PropTypes.Requireable<string | number>;
            borderLeftColor: PropTypes.Requireable<string | number>;
            borderRadius: PropTypes.Requireable<number>;
            borderTopLeftRadius: PropTypes.Requireable<number>;
            borderTopRightRadius: PropTypes.Requireable<number>;
            borderBottomLeftRadius: PropTypes.Requireable<number>;
            borderBottomRightRadius: PropTypes.Requireable<number>;
            borderStyle: PropTypes.Requireable<string>;
            borderTopStyle: PropTypes.Requireable<string>;
            borderRightStyle: PropTypes.Requireable<string>;
            borderBottomStyle: PropTypes.Requireable<string>;
            borderLeftStyle: PropTypes.Requireable<string>;
            borderWidth: PropTypes.Requireable<number>;
            borderTopWidth: PropTypes.Requireable<number>;
            borderRightWidth: PropTypes.Requireable<number>;
            borderBottomWidth: PropTypes.Requireable<number>;
            borderLeftWidth: PropTypes.Requireable<number>;
            opacity: PropTypes.Requireable<number>;
            transform: PropTypes.Requireable<string>;
            transformOrigin: PropTypes.Requireable<string>;
        }>>;
        name: PropTypes.Requireable<string>;
        overrides: PropTypes.Requireable<{
            [x: string]: string | ((...args: any[]) => any) | null | undefined;
        }>;
        resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
            top: PropTypes.Requireable<boolean>;
            right: PropTypes.Requireable<boolean>;
            bottom: PropTypes.Requireable<boolean>;
            left: PropTypes.Requireable<boolean>;
            fixedHeight: PropTypes.Requireable<boolean>;
            fixedWidth: PropTypes.Requireable<boolean>;
        }>>;
    }>, context?: any): {
        render(): JSX.Element;
        context: any;
        setState<K extends never>(state: {} | ((prevState: Readonly<{}>, props: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>) => {} | Pick<{}, K> | null) | Pick<{}, K> | null, callback?: (() => void) | undefined): void;
        forceUpdate(callback?: (() => void) | undefined): void;
        readonly props: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>> & Readonly<{
            children?: React.ReactNode;
        }>;
        state: Readonly<{}>;
        refs: {
            [key: string]: React.ReactInstance;
        };
        componentDidMount?(): void;
        shouldComponentUpdate?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextState: Readonly<{}>, nextContext: any): boolean;
        componentWillUnmount?(): void;
        componentDidCatch?(error: Error, errorInfo: React.ErrorInfo): void;
        getSnapshotBeforeUpdate?(prevProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, prevState: Readonly<{}>): any;
        componentDidUpdate?(prevProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, prevState: Readonly<{}>, snapshot?: any): void;
        componentWillMount?(): void;
        UNSAFE_componentWillMount?(): void;
        componentWillReceiveProps?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextContext: any): void;
        UNSAFE_componentWillReceiveProps?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextContext: any): void;
        componentWillUpdate?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextState: Readonly<{}>, nextContext: any): void;
        UNSAFE_componentWillUpdate?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextState: Readonly<{}>, nextContext: any): void;
    };
    displayName: string;
    propTypes: {
        style: PropTypes.Requireable<PropTypes.InferProps<{
            color: PropTypes.Requireable<string | number>;
            shadowColor: PropTypes.Requireable<string | number>;
            shadowInner: PropTypes.Requireable<boolean>;
            shadowSpread: PropTypes.Requireable<number>;
            shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
            }>>;
            shadowOpacity: PropTypes.Requireable<number>;
            shadowRadius: PropTypes.Requireable<number>;
            width: PropTypes.Requireable<number>;
            height: PropTypes.Requireable<number>;
            top: PropTypes.Requireable<number>;
            left: PropTypes.Requireable<number>;
            right: PropTypes.Requireable<number>;
            bottom: PropTypes.Requireable<number>;
            minWidth: PropTypes.Requireable<number>;
            maxWidth: PropTypes.Requireable<number>;
            minHeight: PropTypes.Requireable<number>;
            maxHeight: PropTypes.Requireable<number>;
            margin: PropTypes.Requireable<number>;
            marginVertical: PropTypes.Requireable<number>;
            marginHorizontal: PropTypes.Requireable<number>;
            marginTop: PropTypes.Requireable<number>;
            marginBottom: PropTypes.Requireable<number>;
            marginLeft: PropTypes.Requireable<number>;
            marginRight: PropTypes.Requireable<number>;
            padding: PropTypes.Requireable<number>;
            paddingVertical: PropTypes.Requireable<number>;
            paddingHorizontal: PropTypes.Requireable<number>;
            paddingTop: PropTypes.Requireable<number>;
            paddingBottom: PropTypes.Requireable<number>;
            paddingLeft: PropTypes.Requireable<number>;
            paddingRight: PropTypes.Requireable<number>;
            position: PropTypes.Requireable<string>;
            flexDirection: PropTypes.Requireable<string>;
            flexWrap: PropTypes.Requireable<string>;
            justifyContent: PropTypes.Requireable<string>;
            alignItems: PropTypes.Requireable<string>;
            alignSelf: PropTypes.Requireable<string>;
            overflow: PropTypes.Requireable<string>;
            overflowX: PropTypes.Requireable<string>;
            overflowY: PropTypes.Requireable<string>;
            flex: PropTypes.Requireable<number>;
            flexGrow: PropTypes.Requireable<number>;
            flexShrink: PropTypes.Requireable<number>;
            flexBasis: PropTypes.Requireable<number>;
            aspectRatio: PropTypes.Requireable<number>;
            zIndex: PropTypes.Requireable<number>;
            backfaceVisibility: PropTypes.Requireable<string>;
            backgroundColor: PropTypes.Requireable<string | number>;
            borderColor: PropTypes.Requireable<string | number>;
            borderTopColor: PropTypes.Requireable<string | number>;
            borderRightColor: PropTypes.Requireable<string | number>;
            borderBottomColor: PropTypes.Requireable<string | number>;
            borderLeftColor: PropTypes.Requireable<string | number>;
            borderRadius: PropTypes.Requireable<number>;
            borderTopLeftRadius: PropTypes.Requireable<number>;
            borderTopRightRadius: PropTypes.Requireable<number>;
            borderBottomLeftRadius: PropTypes.Requireable<number>;
            borderBottomRightRadius: PropTypes.Requireable<number>;
            borderStyle: PropTypes.Requireable<string>;
            borderTopStyle: PropTypes.Requireable<string>;
            borderRightStyle: PropTypes.Requireable<string>;
            borderBottomStyle: PropTypes.Requireable<string>;
            borderLeftStyle: PropTypes.Requireable<string>;
            borderWidth: PropTypes.Requireable<number>;
            borderTopWidth: PropTypes.Requireable<number>;
            borderRightWidth: PropTypes.Requireable<number>;
            borderBottomWidth: PropTypes.Requireable<number>;
            borderLeftWidth: PropTypes.Requireable<number>;
            opacity: PropTypes.Requireable<number>;
            transform: PropTypes.Requireable<string>;
            transformOrigin: PropTypes.Requireable<string>;
        }>>;
        name: PropTypes.Requireable<string>;
        overrides: PropTypes.Requireable<{
            [x: string]: string | ((...args: any[]) => any) | null | undefined;
        }>;
        resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
            top: PropTypes.Requireable<boolean>;
            right: PropTypes.Requireable<boolean>;
            bottom: PropTypes.Requireable<boolean>;
            left: PropTypes.Requireable<boolean>;
            fixedHeight: PropTypes.Requireable<boolean>;
            fixedWidth: PropTypes.Requireable<boolean>;
        }>>;
    };
    symbolID: string;
    masterName: string;
    contextType?: React.Context<any> | undefined;
};
declare const SymbolMasterPropTypes: {
    style: PropTypes.Requireable<PropTypes.InferProps<{
        color: PropTypes.Requireable<string | number>;
        shadowColor: PropTypes.Requireable<string | number>;
        shadowInner: PropTypes.Requireable<boolean>;
        shadowSpread: PropTypes.Requireable<number>;
        shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
            width: PropTypes.Requireable<number>;
            height: PropTypes.Requireable<number>;
        }>>;
        shadowOpacity: PropTypes.Requireable<number>;
        shadowRadius: PropTypes.Requireable<number>;
        width: PropTypes.Requireable<number>;
        height: PropTypes.Requireable<number>;
        top: PropTypes.Requireable<number>;
        left: PropTypes.Requireable<number>;
        right: PropTypes.Requireable<number>;
        bottom: PropTypes.Requireable<number>;
        minWidth: PropTypes.Requireable<number>;
        maxWidth: PropTypes.Requireable<number>;
        minHeight: PropTypes.Requireable<number>;
        maxHeight: PropTypes.Requireable<number>;
        margin: PropTypes.Requireable<number>;
        marginVertical: PropTypes.Requireable<number>;
        marginHorizontal: PropTypes.Requireable<number>;
        marginTop: PropTypes.Requireable<number>;
        marginBottom: PropTypes.Requireable<number>;
        marginLeft: PropTypes.Requireable<number>;
        marginRight: PropTypes.Requireable<number>;
        padding: PropTypes.Requireable<number>;
        paddingVertical: PropTypes.Requireable<number>;
        paddingHorizontal: PropTypes.Requireable<number>;
        paddingTop: PropTypes.Requireable<number>;
        paddingBottom: PropTypes.Requireable<number>;
        paddingLeft: PropTypes.Requireable<number>;
        paddingRight: PropTypes.Requireable<number>;
        position: PropTypes.Requireable<string>;
        flexDirection: PropTypes.Requireable<string>;
        flexWrap: PropTypes.Requireable<string>;
        justifyContent: PropTypes.Requireable<string>;
        alignItems: PropTypes.Requireable<string>;
        alignSelf: PropTypes.Requireable<string>;
        overflow: PropTypes.Requireable<string>;
        overflowX: PropTypes.Requireable<string>;
        overflowY: PropTypes.Requireable<string>;
        flex: PropTypes.Requireable<number>;
        flexGrow: PropTypes.Requireable<number>;
        flexShrink: PropTypes.Requireable<number>;
        flexBasis: PropTypes.Requireable<number>;
        aspectRatio: PropTypes.Requireable<number>;
        zIndex: PropTypes.Requireable<number>;
        backfaceVisibility: PropTypes.Requireable<string>;
        backgroundColor: PropTypes.Requireable<string | number>;
        borderColor: PropTypes.Requireable<string | number>;
        borderTopColor: PropTypes.Requireable<string | number>;
        borderRightColor: PropTypes.Requireable<string | number>;
        borderBottomColor: PropTypes.Requireable<string | number>;
        borderLeftColor: PropTypes.Requireable<string | number>;
        borderRadius: PropTypes.Requireable<number>;
        borderTopLeftRadius: PropTypes.Requireable<number>;
        borderTopRightRadius: PropTypes.Requireable<number>;
        borderBottomLeftRadius: PropTypes.Requireable<number>;
        borderBottomRightRadius: PropTypes.Requireable<number>;
        borderStyle: PropTypes.Requireable<string>;
        borderTopStyle: PropTypes.Requireable<string>;
        borderRightStyle: PropTypes.Requireable<string>;
        borderBottomStyle: PropTypes.Requireable<string>;
        borderLeftStyle: PropTypes.Requireable<string>;
        borderWidth: PropTypes.Requireable<number>;
        borderTopWidth: PropTypes.Requireable<number>;
        borderRightWidth: PropTypes.Requireable<number>;
        borderBottomWidth: PropTypes.Requireable<number>;
        borderLeftWidth: PropTypes.Requireable<number>;
        opacity: PropTypes.Requireable<number>;
        transform: PropTypes.Requireable<string>;
        transformOrigin: PropTypes.Requireable<string>;
    }>>;
    name: PropTypes.Requireable<string>;
};
export declare type SymbolMasterProps = PropTypes.InferProps<typeof SymbolMasterPropTypes>;
export declare const makeSymbol: (Component: React.ComponentType<any>, symbolProps: string | PropTypes.InferProps<{
    style: PropTypes.Requireable<PropTypes.InferProps<{
        color: PropTypes.Requireable<string | number>;
        shadowColor: PropTypes.Requireable<string | number>;
        shadowInner: PropTypes.Requireable<boolean>;
        shadowSpread: PropTypes.Requireable<number>;
        shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
            width: PropTypes.Requireable<number>;
            height: PropTypes.Requireable<number>;
        }>>;
        shadowOpacity: PropTypes.Requireable<number>;
        shadowRadius: PropTypes.Requireable<number>;
        width: PropTypes.Requireable<number>;
        height: PropTypes.Requireable<number>;
        top: PropTypes.Requireable<number>;
        left: PropTypes.Requireable<number>;
        right: PropTypes.Requireable<number>;
        bottom: PropTypes.Requireable<number>;
        minWidth: PropTypes.Requireable<number>;
        maxWidth: PropTypes.Requireable<number>;
        minHeight: PropTypes.Requireable<number>;
        maxHeight: PropTypes.Requireable<number>;
        margin: PropTypes.Requireable<number>;
        marginVertical: PropTypes.Requireable<number>;
        marginHorizontal: PropTypes.Requireable<number>;
        marginTop: PropTypes.Requireable<number>;
        marginBottom: PropTypes.Requireable<number>;
        marginLeft: PropTypes.Requireable<number>;
        marginRight: PropTypes.Requireable<number>;
        padding: PropTypes.Requireable<number>;
        paddingVertical: PropTypes.Requireable<number>;
        paddingHorizontal: PropTypes.Requireable<number>;
        paddingTop: PropTypes.Requireable<number>;
        paddingBottom: PropTypes.Requireable<number>;
        paddingLeft: PropTypes.Requireable<number>;
        paddingRight: PropTypes.Requireable<number>;
        position: PropTypes.Requireable<string>;
        flexDirection: PropTypes.Requireable<string>;
        flexWrap: PropTypes.Requireable<string>;
        justifyContent: PropTypes.Requireable<string>;
        alignItems: PropTypes.Requireable<string>;
        alignSelf: PropTypes.Requireable<string>;
        overflow: PropTypes.Requireable<string>;
        overflowX: PropTypes.Requireable<string>;
        overflowY: PropTypes.Requireable<string>;
        flex: PropTypes.Requireable<number>;
        flexGrow: PropTypes.Requireable<number>;
        flexShrink: PropTypes.Requireable<number>;
        flexBasis: PropTypes.Requireable<number>;
        aspectRatio: PropTypes.Requireable<number>;
        zIndex: PropTypes.Requireable<number>;
        backfaceVisibility: PropTypes.Requireable<string>;
        backgroundColor: PropTypes.Requireable<string | number>;
        borderColor: PropTypes.Requireable<string | number>;
        borderTopColor: PropTypes.Requireable<string | number>;
        borderRightColor: PropTypes.Requireable<string | number>;
        borderBottomColor: PropTypes.Requireable<string | number>;
        borderLeftColor: PropTypes.Requireable<string | number>;
        borderRadius: PropTypes.Requireable<number>;
        borderTopLeftRadius: PropTypes.Requireable<number>;
        borderTopRightRadius: PropTypes.Requireable<number>;
        borderBottomLeftRadius: PropTypes.Requireable<number>;
        borderBottomRightRadius: PropTypes.Requireable<number>;
        borderStyle: PropTypes.Requireable<string>;
        borderTopStyle: PropTypes.Requireable<string>;
        borderRightStyle: PropTypes.Requireable<string>;
        borderBottomStyle: PropTypes.Requireable<string>;
        borderLeftStyle: PropTypes.Requireable<string>;
        borderWidth: PropTypes.Requireable<number>;
        borderTopWidth: PropTypes.Requireable<number>;
        borderRightWidth: PropTypes.Requireable<number>;
        borderBottomWidth: PropTypes.Requireable<number>;
        borderLeftWidth: PropTypes.Requireable<number>;
        opacity: PropTypes.Requireable<number>;
        transform: PropTypes.Requireable<string>;
        transformOrigin: PropTypes.Requireable<string>;
    }>>;
    name: PropTypes.Requireable<string>;
}>, document?: SketchDocument | SketchDocumentData | WrappedSketchDocument | undefined) => {
    new (props: Readonly<PropTypes.InferProps<{
        style: PropTypes.Requireable<PropTypes.InferProps<{
            color: PropTypes.Requireable<string | number>;
            shadowColor: PropTypes.Requireable<string | number>;
            shadowInner: PropTypes.Requireable<boolean>;
            shadowSpread: PropTypes.Requireable<number>;
            shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
            }>>;
            shadowOpacity: PropTypes.Requireable<number>;
            shadowRadius: PropTypes.Requireable<number>;
            width: PropTypes.Requireable<number>;
            height: PropTypes.Requireable<number>;
            top: PropTypes.Requireable<number>;
            left: PropTypes.Requireable<number>;
            right: PropTypes.Requireable<number>;
            bottom: PropTypes.Requireable<number>;
            minWidth: PropTypes.Requireable<number>;
            maxWidth: PropTypes.Requireable<number>;
            minHeight: PropTypes.Requireable<number>;
            maxHeight: PropTypes.Requireable<number>;
            margin: PropTypes.Requireable<number>;
            marginVertical: PropTypes.Requireable<number>;
            marginHorizontal: PropTypes.Requireable<number>;
            marginTop: PropTypes.Requireable<number>;
            marginBottom: PropTypes.Requireable<number>;
            marginLeft: PropTypes.Requireable<number>;
            marginRight: PropTypes.Requireable<number>;
            padding: PropTypes.Requireable<number>;
            paddingVertical: PropTypes.Requireable<number>;
            paddingHorizontal: PropTypes.Requireable<number>;
            paddingTop: PropTypes.Requireable<number>;
            paddingBottom: PropTypes.Requireable<number>;
            paddingLeft: PropTypes.Requireable<number>;
            paddingRight: PropTypes.Requireable<number>;
            position: PropTypes.Requireable<string>;
            flexDirection: PropTypes.Requireable<string>;
            flexWrap: PropTypes.Requireable<string>;
            justifyContent: PropTypes.Requireable<string>;
            alignItems: PropTypes.Requireable<string>;
            alignSelf: PropTypes.Requireable<string>;
            overflow: PropTypes.Requireable<string>;
            overflowX: PropTypes.Requireable<string>;
            overflowY: PropTypes.Requireable<string>;
            flex: PropTypes.Requireable<number>;
            flexGrow: PropTypes.Requireable<number>;
            flexShrink: PropTypes.Requireable<number>;
            flexBasis: PropTypes.Requireable<number>;
            aspectRatio: PropTypes.Requireable<number>;
            zIndex: PropTypes.Requireable<number>;
            backfaceVisibility: PropTypes.Requireable<string>;
            backgroundColor: PropTypes.Requireable<string | number>;
            borderColor: PropTypes.Requireable<string | number>;
            borderTopColor: PropTypes.Requireable<string | number>;
            borderRightColor: PropTypes.Requireable<string | number>;
            borderBottomColor: PropTypes.Requireable<string | number>;
            borderLeftColor: PropTypes.Requireable<string | number>;
            borderRadius: PropTypes.Requireable<number>;
            borderTopLeftRadius: PropTypes.Requireable<number>;
            borderTopRightRadius: PropTypes.Requireable<number>;
            borderBottomLeftRadius: PropTypes.Requireable<number>;
            borderBottomRightRadius: PropTypes.Requireable<number>;
            borderStyle: PropTypes.Requireable<string>;
            borderTopStyle: PropTypes.Requireable<string>;
            borderRightStyle: PropTypes.Requireable<string>;
            borderBottomStyle: PropTypes.Requireable<string>;
            borderLeftStyle: PropTypes.Requireable<string>;
            borderWidth: PropTypes.Requireable<number>;
            borderTopWidth: PropTypes.Requireable<number>;
            borderRightWidth: PropTypes.Requireable<number>;
            borderBottomWidth: PropTypes.Requireable<number>;
            borderLeftWidth: PropTypes.Requireable<number>;
            opacity: PropTypes.Requireable<number>;
            transform: PropTypes.Requireable<string>;
            transformOrigin: PropTypes.Requireable<string>;
        }>>;
        name: PropTypes.Requireable<string>;
        overrides: PropTypes.Requireable<{
            [x: string]: string | ((...args: any[]) => any) | null | undefined;
        }>;
        resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
            top: PropTypes.Requireable<boolean>;
            right: PropTypes.Requireable<boolean>;
            bottom: PropTypes.Requireable<boolean>;
            left: PropTypes.Requireable<boolean>;
            fixedHeight: PropTypes.Requireable<boolean>;
            fixedWidth: PropTypes.Requireable<boolean>;
        }>>;
    }>>): {
        render(): JSX.Element;
        context: any;
        setState<K extends never>(state: {} | ((prevState: Readonly<{}>, props: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>) => {} | Pick<{}, K> | null) | Pick<{}, K> | null, callback?: (() => void) | undefined): void;
        forceUpdate(callback?: (() => void) | undefined): void;
        readonly props: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>> & Readonly<{
            children?: React.ReactNode;
        }>;
        state: Readonly<{}>;
        refs: {
            [key: string]: React.ReactInstance;
        };
        componentDidMount?(): void;
        shouldComponentUpdate?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextState: Readonly<{}>, nextContext: any): boolean;
        componentWillUnmount?(): void;
        componentDidCatch?(error: Error, errorInfo: React.ErrorInfo): void;
        getSnapshotBeforeUpdate?(prevProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, prevState: Readonly<{}>): any;
        componentDidUpdate?(prevProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, prevState: Readonly<{}>, snapshot?: any): void;
        componentWillMount?(): void;
        UNSAFE_componentWillMount?(): void;
        componentWillReceiveProps?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextContext: any): void;
        UNSAFE_componentWillReceiveProps?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextContext: any): void;
        componentWillUpdate?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextState: Readonly<{}>, nextContext: any): void;
        UNSAFE_componentWillUpdate?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextState: Readonly<{}>, nextContext: any): void;
    };
    new (props: PropTypes.InferProps<{
        style: PropTypes.Requireable<PropTypes.InferProps<{
            color: PropTypes.Requireable<string | number>;
            shadowColor: PropTypes.Requireable<string | number>;
            shadowInner: PropTypes.Requireable<boolean>;
            shadowSpread: PropTypes.Requireable<number>;
            shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
            }>>;
            shadowOpacity: PropTypes.Requireable<number>;
            shadowRadius: PropTypes.Requireable<number>;
            width: PropTypes.Requireable<number>;
            height: PropTypes.Requireable<number>;
            top: PropTypes.Requireable<number>;
            left: PropTypes.Requireable<number>;
            right: PropTypes.Requireable<number>;
            bottom: PropTypes.Requireable<number>;
            minWidth: PropTypes.Requireable<number>;
            maxWidth: PropTypes.Requireable<number>;
            minHeight: PropTypes.Requireable<number>;
            maxHeight: PropTypes.Requireable<number>;
            margin: PropTypes.Requireable<number>;
            marginVertical: PropTypes.Requireable<number>;
            marginHorizontal: PropTypes.Requireable<number>;
            marginTop: PropTypes.Requireable<number>;
            marginBottom: PropTypes.Requireable<number>;
            marginLeft: PropTypes.Requireable<number>;
            marginRight: PropTypes.Requireable<number>;
            padding: PropTypes.Requireable<number>;
            paddingVertical: PropTypes.Requireable<number>;
            paddingHorizontal: PropTypes.Requireable<number>;
            paddingTop: PropTypes.Requireable<number>;
            paddingBottom: PropTypes.Requireable<number>;
            paddingLeft: PropTypes.Requireable<number>;
            paddingRight: PropTypes.Requireable<number>;
            position: PropTypes.Requireable<string>;
            flexDirection: PropTypes.Requireable<string>;
            flexWrap: PropTypes.Requireable<string>;
            justifyContent: PropTypes.Requireable<string>;
            alignItems: PropTypes.Requireable<string>;
            alignSelf: PropTypes.Requireable<string>;
            overflow: PropTypes.Requireable<string>;
            overflowX: PropTypes.Requireable<string>;
            overflowY: PropTypes.Requireable<string>;
            flex: PropTypes.Requireable<number>;
            flexGrow: PropTypes.Requireable<number>;
            flexShrink: PropTypes.Requireable<number>;
            flexBasis: PropTypes.Requireable<number>;
            aspectRatio: PropTypes.Requireable<number>;
            zIndex: PropTypes.Requireable<number>;
            backfaceVisibility: PropTypes.Requireable<string>;
            backgroundColor: PropTypes.Requireable<string | number>;
            borderColor: PropTypes.Requireable<string | number>;
            borderTopColor: PropTypes.Requireable<string | number>;
            borderRightColor: PropTypes.Requireable<string | number>;
            borderBottomColor: PropTypes.Requireable<string | number>;
            borderLeftColor: PropTypes.Requireable<string | number>;
            borderRadius: PropTypes.Requireable<number>;
            borderTopLeftRadius: PropTypes.Requireable<number>;
            borderTopRightRadius: PropTypes.Requireable<number>;
            borderBottomLeftRadius: PropTypes.Requireable<number>;
            borderBottomRightRadius: PropTypes.Requireable<number>;
            borderStyle: PropTypes.Requireable<string>;
            borderTopStyle: PropTypes.Requireable<string>;
            borderRightStyle: PropTypes.Requireable<string>;
            borderBottomStyle: PropTypes.Requireable<string>;
            borderLeftStyle: PropTypes.Requireable<string>;
            borderWidth: PropTypes.Requireable<number>;
            borderTopWidth: PropTypes.Requireable<number>;
            borderRightWidth: PropTypes.Requireable<number>;
            borderBottomWidth: PropTypes.Requireable<number>;
            borderLeftWidth: PropTypes.Requireable<number>;
            opacity: PropTypes.Requireable<number>;
            transform: PropTypes.Requireable<string>;
            transformOrigin: PropTypes.Requireable<string>;
        }>>;
        name: PropTypes.Requireable<string>;
        overrides: PropTypes.Requireable<{
            [x: string]: string | ((...args: any[]) => any) | null | undefined;
        }>;
        resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
            top: PropTypes.Requireable<boolean>;
            right: PropTypes.Requireable<boolean>;
            bottom: PropTypes.Requireable<boolean>;
            left: PropTypes.Requireable<boolean>;
            fixedHeight: PropTypes.Requireable<boolean>;
            fixedWidth: PropTypes.Requireable<boolean>;
        }>>;
    }>, context?: any): {
        render(): JSX.Element;
        context: any;
        setState<K extends never>(state: {} | ((prevState: Readonly<{}>, props: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>) => {} | Pick<{}, K> | null) | Pick<{}, K> | null, callback?: (() => void) | undefined): void;
        forceUpdate(callback?: (() => void) | undefined): void;
        readonly props: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>> & Readonly<{
            children?: React.ReactNode;
        }>;
        state: Readonly<{}>;
        refs: {
            [key: string]: React.ReactInstance;
        };
        componentDidMount?(): void;
        shouldComponentUpdate?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextState: Readonly<{}>, nextContext: any): boolean;
        componentWillUnmount?(): void;
        componentDidCatch?(error: Error, errorInfo: React.ErrorInfo): void;
        getSnapshotBeforeUpdate?(prevProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, prevState: Readonly<{}>): any;
        componentDidUpdate?(prevProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, prevState: Readonly<{}>, snapshot?: any): void;
        componentWillMount?(): void;
        UNSAFE_componentWillMount?(): void;
        componentWillReceiveProps?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextContext: any): void;
        UNSAFE_componentWillReceiveProps?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextContext: any): void;
        componentWillUpdate?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextState: Readonly<{}>, nextContext: any): void;
        UNSAFE_componentWillUpdate?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextState: Readonly<{}>, nextContext: any): void;
    };
    displayName: string;
    propTypes: {
        style: PropTypes.Requireable<PropTypes.InferProps<{
            color: PropTypes.Requireable<string | number>;
            shadowColor: PropTypes.Requireable<string | number>;
            shadowInner: PropTypes.Requireable<boolean>;
            shadowSpread: PropTypes.Requireable<number>;
            shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
            }>>;
            shadowOpacity: PropTypes.Requireable<number>;
            shadowRadius: PropTypes.Requireable<number>;
            width: PropTypes.Requireable<number>;
            height: PropTypes.Requireable<number>;
            top: PropTypes.Requireable<number>;
            left: PropTypes.Requireable<number>;
            right: PropTypes.Requireable<number>;
            bottom: PropTypes.Requireable<number>;
            minWidth: PropTypes.Requireable<number>;
            maxWidth: PropTypes.Requireable<number>;
            minHeight: PropTypes.Requireable<number>;
            maxHeight: PropTypes.Requireable<number>;
            margin: PropTypes.Requireable<number>;
            marginVertical: PropTypes.Requireable<number>;
            marginHorizontal: PropTypes.Requireable<number>;
            marginTop: PropTypes.Requireable<number>;
            marginBottom: PropTypes.Requireable<number>;
            marginLeft: PropTypes.Requireable<number>;
            marginRight: PropTypes.Requireable<number>;
            padding: PropTypes.Requireable<number>;
            paddingVertical: PropTypes.Requireable<number>;
            paddingHorizontal: PropTypes.Requireable<number>;
            paddingTop: PropTypes.Requireable<number>;
            paddingBottom: PropTypes.Requireable<number>;
            paddingLeft: PropTypes.Requireable<number>;
            paddingRight: PropTypes.Requireable<number>;
            position: PropTypes.Requireable<string>;
            flexDirection: PropTypes.Requireable<string>;
            flexWrap: PropTypes.Requireable<string>;
            justifyContent: PropTypes.Requireable<string>;
            alignItems: PropTypes.Requireable<string>;
            alignSelf: PropTypes.Requireable<string>;
            overflow: PropTypes.Requireable<string>;
            overflowX: PropTypes.Requireable<string>;
            overflowY: PropTypes.Requireable<string>;
            flex: PropTypes.Requireable<number>;
            flexGrow: PropTypes.Requireable<number>;
            flexShrink: PropTypes.Requireable<number>;
            flexBasis: PropTypes.Requireable<number>;
            aspectRatio: PropTypes.Requireable<number>;
            zIndex: PropTypes.Requireable<number>;
            backfaceVisibility: PropTypes.Requireable<string>;
            backgroundColor: PropTypes.Requireable<string | number>;
            borderColor: PropTypes.Requireable<string | number>;
            borderTopColor: PropTypes.Requireable<string | number>;
            borderRightColor: PropTypes.Requireable<string | number>;
            borderBottomColor: PropTypes.Requireable<string | number>;
            borderLeftColor: PropTypes.Requireable<string | number>;
            borderRadius: PropTypes.Requireable<number>;
            borderTopLeftRadius: PropTypes.Requireable<number>;
            borderTopRightRadius: PropTypes.Requireable<number>;
            borderBottomLeftRadius: PropTypes.Requireable<number>;
            borderBottomRightRadius: PropTypes.Requireable<number>;
            borderStyle: PropTypes.Requireable<string>;
            borderTopStyle: PropTypes.Requireable<string>;
            borderRightStyle: PropTypes.Requireable<string>;
            borderBottomStyle: PropTypes.Requireable<string>;
            borderLeftStyle: PropTypes.Requireable<string>;
            borderWidth: PropTypes.Requireable<number>;
            borderTopWidth: PropTypes.Requireable<number>;
            borderRightWidth: PropTypes.Requireable<number>;
            borderBottomWidth: PropTypes.Requireable<number>;
            borderLeftWidth: PropTypes.Requireable<number>;
            opacity: PropTypes.Requireable<number>;
            transform: PropTypes.Requireable<string>;
            transformOrigin: PropTypes.Requireable<string>;
        }>>;
        name: PropTypes.Requireable<string>;
        overrides: PropTypes.Requireable<{
            [x: string]: string | ((...args: any[]) => any) | null | undefined;
        }>;
        resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
            top: PropTypes.Requireable<boolean>;
            right: PropTypes.Requireable<boolean>;
            bottom: PropTypes.Requireable<boolean>;
            left: PropTypes.Requireable<boolean>;
            fixedHeight: PropTypes.Requireable<boolean>;
            fixedWidth: PropTypes.Requireable<boolean>;
        }>>;
    };
    symbolID: string;
    masterName: string;
    contextType?: React.Context<any> | undefined;
};
export declare const getSymbolMasterByName: (name: string, document?: SketchDocument | SketchDocumentData | WrappedSketchDocument | undefined) => FileFormat.SymbolMaster | undefined;
export declare const getSymbolMasterById: (symbolID?: string | undefined, document?: SketchDocument | SketchDocumentData | WrappedSketchDocument | undefined) => FileFormat.SymbolMaster | undefined;
export declare const getSymbolComponentById: (symbolID: string, document?: SketchDocument | SketchDocumentData | WrappedSketchDocument | undefined) => {
    new (props: Readonly<PropTypes.InferProps<{
        style: PropTypes.Requireable<PropTypes.InferProps<{
            color: PropTypes.Requireable<string | number>;
            shadowColor: PropTypes.Requireable<string | number>;
            shadowInner: PropTypes.Requireable<boolean>;
            shadowSpread: PropTypes.Requireable<number>;
            shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
            }>>;
            shadowOpacity: PropTypes.Requireable<number>;
            shadowRadius: PropTypes.Requireable<number>;
            width: PropTypes.Requireable<number>;
            height: PropTypes.Requireable<number>;
            top: PropTypes.Requireable<number>;
            left: PropTypes.Requireable<number>;
            right: PropTypes.Requireable<number>;
            bottom: PropTypes.Requireable<number>;
            minWidth: PropTypes.Requireable<number>;
            maxWidth: PropTypes.Requireable<number>;
            minHeight: PropTypes.Requireable<number>;
            maxHeight: PropTypes.Requireable<number>;
            margin: PropTypes.Requireable<number>;
            marginVertical: PropTypes.Requireable<number>;
            marginHorizontal: PropTypes.Requireable<number>;
            marginTop: PropTypes.Requireable<number>;
            marginBottom: PropTypes.Requireable<number>;
            marginLeft: PropTypes.Requireable<number>;
            marginRight: PropTypes.Requireable<number>;
            padding: PropTypes.Requireable<number>;
            paddingVertical: PropTypes.Requireable<number>;
            paddingHorizontal: PropTypes.Requireable<number>;
            paddingTop: PropTypes.Requireable<number>;
            paddingBottom: PropTypes.Requireable<number>;
            paddingLeft: PropTypes.Requireable<number>;
            paddingRight: PropTypes.Requireable<number>;
            position: PropTypes.Requireable<string>;
            flexDirection: PropTypes.Requireable<string>;
            flexWrap: PropTypes.Requireable<string>;
            justifyContent: PropTypes.Requireable<string>;
            alignItems: PropTypes.Requireable<string>;
            alignSelf: PropTypes.Requireable<string>;
            overflow: PropTypes.Requireable<string>;
            overflowX: PropTypes.Requireable<string>;
            overflowY: PropTypes.Requireable<string>;
            flex: PropTypes.Requireable<number>;
            flexGrow: PropTypes.Requireable<number>;
            flexShrink: PropTypes.Requireable<number>;
            flexBasis: PropTypes.Requireable<number>;
            aspectRatio: PropTypes.Requireable<number>;
            zIndex: PropTypes.Requireable<number>;
            backfaceVisibility: PropTypes.Requireable<string>;
            backgroundColor: PropTypes.Requireable<string | number>;
            borderColor: PropTypes.Requireable<string | number>;
            borderTopColor: PropTypes.Requireable<string | number>;
            borderRightColor: PropTypes.Requireable<string | number>;
            borderBottomColor: PropTypes.Requireable<string | number>;
            borderLeftColor: PropTypes.Requireable<string | number>;
            borderRadius: PropTypes.Requireable<number>;
            borderTopLeftRadius: PropTypes.Requireable<number>;
            borderTopRightRadius: PropTypes.Requireable<number>;
            borderBottomLeftRadius: PropTypes.Requireable<number>;
            borderBottomRightRadius: PropTypes.Requireable<number>;
            borderStyle: PropTypes.Requireable<string>;
            borderTopStyle: PropTypes.Requireable<string>;
            borderRightStyle: PropTypes.Requireable<string>;
            borderBottomStyle: PropTypes.Requireable<string>;
            borderLeftStyle: PropTypes.Requireable<string>;
            borderWidth: PropTypes.Requireable<number>;
            borderTopWidth: PropTypes.Requireable<number>;
            borderRightWidth: PropTypes.Requireable<number>;
            borderBottomWidth: PropTypes.Requireable<number>;
            borderLeftWidth: PropTypes.Requireable<number>;
            opacity: PropTypes.Requireable<number>;
            transform: PropTypes.Requireable<string>;
            transformOrigin: PropTypes.Requireable<string>;
        }>>;
        name: PropTypes.Requireable<string>;
        overrides: PropTypes.Requireable<{
            [x: string]: string | ((...args: any[]) => any) | null | undefined;
        }>;
        resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
            top: PropTypes.Requireable<boolean>;
            right: PropTypes.Requireable<boolean>;
            bottom: PropTypes.Requireable<boolean>;
            left: PropTypes.Requireable<boolean>;
            fixedHeight: PropTypes.Requireable<boolean>;
            fixedWidth: PropTypes.Requireable<boolean>;
        }>>;
    }>>): {
        render(): JSX.Element;
        context: any;
        setState<K extends never>(state: {} | ((prevState: Readonly<{}>, props: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>) => {} | Pick<{}, K> | null) | Pick<{}, K> | null, callback?: (() => void) | undefined): void;
        forceUpdate(callback?: (() => void) | undefined): void;
        readonly props: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>> & Readonly<{
            children?: React.ReactNode;
        }>;
        state: Readonly<{}>;
        refs: {
            [key: string]: React.ReactInstance;
        };
        componentDidMount?(): void;
        shouldComponentUpdate?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextState: Readonly<{}>, nextContext: any): boolean;
        componentWillUnmount?(): void;
        componentDidCatch?(error: Error, errorInfo: React.ErrorInfo): void;
        getSnapshotBeforeUpdate?(prevProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, prevState: Readonly<{}>): any;
        componentDidUpdate?(prevProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, prevState: Readonly<{}>, snapshot?: any): void;
        componentWillMount?(): void;
        UNSAFE_componentWillMount?(): void;
        componentWillReceiveProps?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextContext: any): void;
        UNSAFE_componentWillReceiveProps?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextContext: any): void;
        componentWillUpdate?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextState: Readonly<{}>, nextContext: any): void;
        UNSAFE_componentWillUpdate?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextState: Readonly<{}>, nextContext: any): void;
    };
    new (props: PropTypes.InferProps<{
        style: PropTypes.Requireable<PropTypes.InferProps<{
            color: PropTypes.Requireable<string | number>;
            shadowColor: PropTypes.Requireable<string | number>;
            shadowInner: PropTypes.Requireable<boolean>;
            shadowSpread: PropTypes.Requireable<number>;
            shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
            }>>;
            shadowOpacity: PropTypes.Requireable<number>;
            shadowRadius: PropTypes.Requireable<number>;
            width: PropTypes.Requireable<number>;
            height: PropTypes.Requireable<number>;
            top: PropTypes.Requireable<number>;
            left: PropTypes.Requireable<number>;
            right: PropTypes.Requireable<number>;
            bottom: PropTypes.Requireable<number>;
            minWidth: PropTypes.Requireable<number>;
            maxWidth: PropTypes.Requireable<number>;
            minHeight: PropTypes.Requireable<number>;
            maxHeight: PropTypes.Requireable<number>;
            margin: PropTypes.Requireable<number>;
            marginVertical: PropTypes.Requireable<number>;
            marginHorizontal: PropTypes.Requireable<number>;
            marginTop: PropTypes.Requireable<number>;
            marginBottom: PropTypes.Requireable<number>;
            marginLeft: PropTypes.Requireable<number>;
            marginRight: PropTypes.Requireable<number>;
            padding: PropTypes.Requireable<number>;
            paddingVertical: PropTypes.Requireable<number>;
            paddingHorizontal: PropTypes.Requireable<number>;
            paddingTop: PropTypes.Requireable<number>;
            paddingBottom: PropTypes.Requireable<number>;
            paddingLeft: PropTypes.Requireable<number>;
            paddingRight: PropTypes.Requireable<number>;
            position: PropTypes.Requireable<string>;
            flexDirection: PropTypes.Requireable<string>;
            flexWrap: PropTypes.Requireable<string>;
            justifyContent: PropTypes.Requireable<string>;
            alignItems: PropTypes.Requireable<string>;
            alignSelf: PropTypes.Requireable<string>;
            overflow: PropTypes.Requireable<string>;
            overflowX: PropTypes.Requireable<string>;
            overflowY: PropTypes.Requireable<string>;
            flex: PropTypes.Requireable<number>;
            flexGrow: PropTypes.Requireable<number>;
            flexShrink: PropTypes.Requireable<number>;
            flexBasis: PropTypes.Requireable<number>;
            aspectRatio: PropTypes.Requireable<number>;
            zIndex: PropTypes.Requireable<number>;
            backfaceVisibility: PropTypes.Requireable<string>;
            backgroundColor: PropTypes.Requireable<string | number>;
            borderColor: PropTypes.Requireable<string | number>;
            borderTopColor: PropTypes.Requireable<string | number>;
            borderRightColor: PropTypes.Requireable<string | number>;
            borderBottomColor: PropTypes.Requireable<string | number>;
            borderLeftColor: PropTypes.Requireable<string | number>;
            borderRadius: PropTypes.Requireable<number>;
            borderTopLeftRadius: PropTypes.Requireable<number>;
            borderTopRightRadius: PropTypes.Requireable<number>;
            borderBottomLeftRadius: PropTypes.Requireable<number>;
            borderBottomRightRadius: PropTypes.Requireable<number>;
            borderStyle: PropTypes.Requireable<string>;
            borderTopStyle: PropTypes.Requireable<string>;
            borderRightStyle: PropTypes.Requireable<string>;
            borderBottomStyle: PropTypes.Requireable<string>;
            borderLeftStyle: PropTypes.Requireable<string>;
            borderWidth: PropTypes.Requireable<number>;
            borderTopWidth: PropTypes.Requireable<number>;
            borderRightWidth: PropTypes.Requireable<number>;
            borderBottomWidth: PropTypes.Requireable<number>;
            borderLeftWidth: PropTypes.Requireable<number>;
            opacity: PropTypes.Requireable<number>;
            transform: PropTypes.Requireable<string>;
            transformOrigin: PropTypes.Requireable<string>;
        }>>;
        name: PropTypes.Requireable<string>;
        overrides: PropTypes.Requireable<{
            [x: string]: string | ((...args: any[]) => any) | null | undefined;
        }>;
        resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
            top: PropTypes.Requireable<boolean>;
            right: PropTypes.Requireable<boolean>;
            bottom: PropTypes.Requireable<boolean>;
            left: PropTypes.Requireable<boolean>;
            fixedHeight: PropTypes.Requireable<boolean>;
            fixedWidth: PropTypes.Requireable<boolean>;
        }>>;
    }>, context?: any): {
        render(): JSX.Element;
        context: any;
        setState<K extends never>(state: {} | ((prevState: Readonly<{}>, props: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>) => {} | Pick<{}, K> | null) | Pick<{}, K> | null, callback?: (() => void) | undefined): void;
        forceUpdate(callback?: (() => void) | undefined): void;
        readonly props: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>> & Readonly<{
            children?: React.ReactNode;
        }>;
        state: Readonly<{}>;
        refs: {
            [key: string]: React.ReactInstance;
        };
        componentDidMount?(): void;
        shouldComponentUpdate?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextState: Readonly<{}>, nextContext: any): boolean;
        componentWillUnmount?(): void;
        componentDidCatch?(error: Error, errorInfo: React.ErrorInfo): void;
        getSnapshotBeforeUpdate?(prevProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, prevState: Readonly<{}>): any;
        componentDidUpdate?(prevProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, prevState: Readonly<{}>, snapshot?: any): void;
        componentWillMount?(): void;
        UNSAFE_componentWillMount?(): void;
        componentWillReceiveProps?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextContext: any): void;
        UNSAFE_componentWillReceiveProps?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextContext: any): void;
        componentWillUpdate?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextState: Readonly<{}>, nextContext: any): void;
        UNSAFE_componentWillUpdate?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextState: Readonly<{}>, nextContext: any): void;
    };
    displayName: string;
    propTypes: {
        style: PropTypes.Requireable<PropTypes.InferProps<{
            color: PropTypes.Requireable<string | number>;
            shadowColor: PropTypes.Requireable<string | number>;
            shadowInner: PropTypes.Requireable<boolean>;
            shadowSpread: PropTypes.Requireable<number>;
            shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
            }>>;
            shadowOpacity: PropTypes.Requireable<number>;
            shadowRadius: PropTypes.Requireable<number>;
            width: PropTypes.Requireable<number>;
            height: PropTypes.Requireable<number>;
            top: PropTypes.Requireable<number>;
            left: PropTypes.Requireable<number>;
            right: PropTypes.Requireable<number>;
            bottom: PropTypes.Requireable<number>;
            minWidth: PropTypes.Requireable<number>;
            maxWidth: PropTypes.Requireable<number>;
            minHeight: PropTypes.Requireable<number>;
            maxHeight: PropTypes.Requireable<number>;
            margin: PropTypes.Requireable<number>;
            marginVertical: PropTypes.Requireable<number>;
            marginHorizontal: PropTypes.Requireable<number>;
            marginTop: PropTypes.Requireable<number>;
            marginBottom: PropTypes.Requireable<number>;
            marginLeft: PropTypes.Requireable<number>;
            marginRight: PropTypes.Requireable<number>;
            padding: PropTypes.Requireable<number>;
            paddingVertical: PropTypes.Requireable<number>;
            paddingHorizontal: PropTypes.Requireable<number>;
            paddingTop: PropTypes.Requireable<number>;
            paddingBottom: PropTypes.Requireable<number>;
            paddingLeft: PropTypes.Requireable<number>;
            paddingRight: PropTypes.Requireable<number>;
            position: PropTypes.Requireable<string>;
            flexDirection: PropTypes.Requireable<string>;
            flexWrap: PropTypes.Requireable<string>;
            justifyContent: PropTypes.Requireable<string>;
            alignItems: PropTypes.Requireable<string>;
            alignSelf: PropTypes.Requireable<string>;
            overflow: PropTypes.Requireable<string>;
            overflowX: PropTypes.Requireable<string>;
            overflowY: PropTypes.Requireable<string>;
            flex: PropTypes.Requireable<number>;
            flexGrow: PropTypes.Requireable<number>;
            flexShrink: PropTypes.Requireable<number>;
            flexBasis: PropTypes.Requireable<number>;
            aspectRatio: PropTypes.Requireable<number>;
            zIndex: PropTypes.Requireable<number>;
            backfaceVisibility: PropTypes.Requireable<string>;
            backgroundColor: PropTypes.Requireable<string | number>;
            borderColor: PropTypes.Requireable<string | number>;
            borderTopColor: PropTypes.Requireable<string | number>;
            borderRightColor: PropTypes.Requireable<string | number>;
            borderBottomColor: PropTypes.Requireable<string | number>;
            borderLeftColor: PropTypes.Requireable<string | number>;
            borderRadius: PropTypes.Requireable<number>;
            borderTopLeftRadius: PropTypes.Requireable<number>;
            borderTopRightRadius: PropTypes.Requireable<number>;
            borderBottomLeftRadius: PropTypes.Requireable<number>;
            borderBottomRightRadius: PropTypes.Requireable<number>;
            borderStyle: PropTypes.Requireable<string>;
            borderTopStyle: PropTypes.Requireable<string>;
            borderRightStyle: PropTypes.Requireable<string>;
            borderBottomStyle: PropTypes.Requireable<string>;
            borderLeftStyle: PropTypes.Requireable<string>;
            borderWidth: PropTypes.Requireable<number>;
            borderTopWidth: PropTypes.Requireable<number>;
            borderRightWidth: PropTypes.Requireable<number>;
            borderBottomWidth: PropTypes.Requireable<number>;
            borderLeftWidth: PropTypes.Requireable<number>;
            opacity: PropTypes.Requireable<number>;
            transform: PropTypes.Requireable<string>;
            transformOrigin: PropTypes.Requireable<string>;
        }>>;
        name: PropTypes.Requireable<string>;
        overrides: PropTypes.Requireable<{
            [x: string]: string | ((...args: any[]) => any) | null | undefined;
        }>;
        resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
            top: PropTypes.Requireable<boolean>;
            right: PropTypes.Requireable<boolean>;
            bottom: PropTypes.Requireable<boolean>;
            left: PropTypes.Requireable<boolean>;
            fixedHeight: PropTypes.Requireable<boolean>;
            fixedWidth: PropTypes.Requireable<boolean>;
        }>>;
    };
    symbolID: string;
    masterName: string;
    contextType?: React.Context<any> | undefined;
} | undefined;
export declare const getSymbolComponentByName: (masterName: string, document?: SketchDocument | SketchDocumentData | WrappedSketchDocument | undefined) => {
    new (props: Readonly<PropTypes.InferProps<{
        style: PropTypes.Requireable<PropTypes.InferProps<{
            color: PropTypes.Requireable<string | number>;
            shadowColor: PropTypes.Requireable<string | number>;
            shadowInner: PropTypes.Requireable<boolean>;
            shadowSpread: PropTypes.Requireable<number>;
            shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
            }>>;
            shadowOpacity: PropTypes.Requireable<number>;
            shadowRadius: PropTypes.Requireable<number>;
            width: PropTypes.Requireable<number>;
            height: PropTypes.Requireable<number>;
            top: PropTypes.Requireable<number>;
            left: PropTypes.Requireable<number>;
            right: PropTypes.Requireable<number>;
            bottom: PropTypes.Requireable<number>;
            minWidth: PropTypes.Requireable<number>;
            maxWidth: PropTypes.Requireable<number>;
            minHeight: PropTypes.Requireable<number>;
            maxHeight: PropTypes.Requireable<number>;
            margin: PropTypes.Requireable<number>;
            marginVertical: PropTypes.Requireable<number>;
            marginHorizontal: PropTypes.Requireable<number>;
            marginTop: PropTypes.Requireable<number>;
            marginBottom: PropTypes.Requireable<number>;
            marginLeft: PropTypes.Requireable<number>;
            marginRight: PropTypes.Requireable<number>;
            padding: PropTypes.Requireable<number>;
            paddingVertical: PropTypes.Requireable<number>;
            paddingHorizontal: PropTypes.Requireable<number>;
            paddingTop: PropTypes.Requireable<number>;
            paddingBottom: PropTypes.Requireable<number>;
            paddingLeft: PropTypes.Requireable<number>;
            paddingRight: PropTypes.Requireable<number>;
            position: PropTypes.Requireable<string>;
            flexDirection: PropTypes.Requireable<string>;
            flexWrap: PropTypes.Requireable<string>;
            justifyContent: PropTypes.Requireable<string>;
            alignItems: PropTypes.Requireable<string>;
            alignSelf: PropTypes.Requireable<string>;
            overflow: PropTypes.Requireable<string>;
            overflowX: PropTypes.Requireable<string>;
            overflowY: PropTypes.Requireable<string>;
            flex: PropTypes.Requireable<number>;
            flexGrow: PropTypes.Requireable<number>;
            flexShrink: PropTypes.Requireable<number>;
            flexBasis: PropTypes.Requireable<number>;
            aspectRatio: PropTypes.Requireable<number>;
            zIndex: PropTypes.Requireable<number>;
            backfaceVisibility: PropTypes.Requireable<string>;
            backgroundColor: PropTypes.Requireable<string | number>;
            borderColor: PropTypes.Requireable<string | number>;
            borderTopColor: PropTypes.Requireable<string | number>;
            borderRightColor: PropTypes.Requireable<string | number>;
            borderBottomColor: PropTypes.Requireable<string | number>;
            borderLeftColor: PropTypes.Requireable<string | number>;
            borderRadius: PropTypes.Requireable<number>;
            borderTopLeftRadius: PropTypes.Requireable<number>;
            borderTopRightRadius: PropTypes.Requireable<number>;
            borderBottomLeftRadius: PropTypes.Requireable<number>;
            borderBottomRightRadius: PropTypes.Requireable<number>;
            borderStyle: PropTypes.Requireable<string>;
            borderTopStyle: PropTypes.Requireable<string>;
            borderRightStyle: PropTypes.Requireable<string>;
            borderBottomStyle: PropTypes.Requireable<string>;
            borderLeftStyle: PropTypes.Requireable<string>;
            borderWidth: PropTypes.Requireable<number>;
            borderTopWidth: PropTypes.Requireable<number>;
            borderRightWidth: PropTypes.Requireable<number>;
            borderBottomWidth: PropTypes.Requireable<number>;
            borderLeftWidth: PropTypes.Requireable<number>;
            opacity: PropTypes.Requireable<number>;
            transform: PropTypes.Requireable<string>;
            transformOrigin: PropTypes.Requireable<string>;
        }>>;
        name: PropTypes.Requireable<string>;
        overrides: PropTypes.Requireable<{
            [x: string]: string | ((...args: any[]) => any) | null | undefined;
        }>;
        resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
            top: PropTypes.Requireable<boolean>;
            right: PropTypes.Requireable<boolean>;
            bottom: PropTypes.Requireable<boolean>;
            left: PropTypes.Requireable<boolean>;
            fixedHeight: PropTypes.Requireable<boolean>;
            fixedWidth: PropTypes.Requireable<boolean>;
        }>>;
    }>>): {
        render(): JSX.Element;
        context: any;
        setState<K extends never>(state: {} | ((prevState: Readonly<{}>, props: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>) => {} | Pick<{}, K> | null) | Pick<{}, K> | null, callback?: (() => void) | undefined): void;
        forceUpdate(callback?: (() => void) | undefined): void;
        readonly props: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>> & Readonly<{
            children?: React.ReactNode;
        }>;
        state: Readonly<{}>;
        refs: {
            [key: string]: React.ReactInstance;
        };
        componentDidMount?(): void;
        shouldComponentUpdate?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextState: Readonly<{}>, nextContext: any): boolean;
        componentWillUnmount?(): void;
        componentDidCatch?(error: Error, errorInfo: React.ErrorInfo): void;
        getSnapshotBeforeUpdate?(prevProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, prevState: Readonly<{}>): any;
        componentDidUpdate?(prevProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, prevState: Readonly<{}>, snapshot?: any): void;
        componentWillMount?(): void;
        UNSAFE_componentWillMount?(): void;
        componentWillReceiveProps?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextContext: any): void;
        UNSAFE_componentWillReceiveProps?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextContext: any): void;
        componentWillUpdate?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextState: Readonly<{}>, nextContext: any): void;
        UNSAFE_componentWillUpdate?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextState: Readonly<{}>, nextContext: any): void;
    };
    new (props: PropTypes.InferProps<{
        style: PropTypes.Requireable<PropTypes.InferProps<{
            color: PropTypes.Requireable<string | number>;
            shadowColor: PropTypes.Requireable<string | number>;
            shadowInner: PropTypes.Requireable<boolean>;
            shadowSpread: PropTypes.Requireable<number>;
            shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
            }>>;
            shadowOpacity: PropTypes.Requireable<number>;
            shadowRadius: PropTypes.Requireable<number>;
            width: PropTypes.Requireable<number>;
            height: PropTypes.Requireable<number>;
            top: PropTypes.Requireable<number>;
            left: PropTypes.Requireable<number>;
            right: PropTypes.Requireable<number>;
            bottom: PropTypes.Requireable<number>;
            minWidth: PropTypes.Requireable<number>;
            maxWidth: PropTypes.Requireable<number>;
            minHeight: PropTypes.Requireable<number>;
            maxHeight: PropTypes.Requireable<number>;
            margin: PropTypes.Requireable<number>;
            marginVertical: PropTypes.Requireable<number>;
            marginHorizontal: PropTypes.Requireable<number>;
            marginTop: PropTypes.Requireable<number>;
            marginBottom: PropTypes.Requireable<number>;
            marginLeft: PropTypes.Requireable<number>;
            marginRight: PropTypes.Requireable<number>;
            padding: PropTypes.Requireable<number>;
            paddingVertical: PropTypes.Requireable<number>;
            paddingHorizontal: PropTypes.Requireable<number>;
            paddingTop: PropTypes.Requireable<number>;
            paddingBottom: PropTypes.Requireable<number>;
            paddingLeft: PropTypes.Requireable<number>;
            paddingRight: PropTypes.Requireable<number>;
            position: PropTypes.Requireable<string>;
            flexDirection: PropTypes.Requireable<string>;
            flexWrap: PropTypes.Requireable<string>;
            justifyContent: PropTypes.Requireable<string>;
            alignItems: PropTypes.Requireable<string>;
            alignSelf: PropTypes.Requireable<string>;
            overflow: PropTypes.Requireable<string>;
            overflowX: PropTypes.Requireable<string>;
            overflowY: PropTypes.Requireable<string>;
            flex: PropTypes.Requireable<number>;
            flexGrow: PropTypes.Requireable<number>;
            flexShrink: PropTypes.Requireable<number>;
            flexBasis: PropTypes.Requireable<number>;
            aspectRatio: PropTypes.Requireable<number>;
            zIndex: PropTypes.Requireable<number>;
            backfaceVisibility: PropTypes.Requireable<string>;
            backgroundColor: PropTypes.Requireable<string | number>;
            borderColor: PropTypes.Requireable<string | number>;
            borderTopColor: PropTypes.Requireable<string | number>;
            borderRightColor: PropTypes.Requireable<string | number>;
            borderBottomColor: PropTypes.Requireable<string | number>;
            borderLeftColor: PropTypes.Requireable<string | number>;
            borderRadius: PropTypes.Requireable<number>;
            borderTopLeftRadius: PropTypes.Requireable<number>;
            borderTopRightRadius: PropTypes.Requireable<number>;
            borderBottomLeftRadius: PropTypes.Requireable<number>;
            borderBottomRightRadius: PropTypes.Requireable<number>;
            borderStyle: PropTypes.Requireable<string>;
            borderTopStyle: PropTypes.Requireable<string>;
            borderRightStyle: PropTypes.Requireable<string>;
            borderBottomStyle: PropTypes.Requireable<string>;
            borderLeftStyle: PropTypes.Requireable<string>;
            borderWidth: PropTypes.Requireable<number>;
            borderTopWidth: PropTypes.Requireable<number>;
            borderRightWidth: PropTypes.Requireable<number>;
            borderBottomWidth: PropTypes.Requireable<number>;
            borderLeftWidth: PropTypes.Requireable<number>;
            opacity: PropTypes.Requireable<number>;
            transform: PropTypes.Requireable<string>;
            transformOrigin: PropTypes.Requireable<string>;
        }>>;
        name: PropTypes.Requireable<string>;
        overrides: PropTypes.Requireable<{
            [x: string]: string | ((...args: any[]) => any) | null | undefined;
        }>;
        resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
            top: PropTypes.Requireable<boolean>;
            right: PropTypes.Requireable<boolean>;
            bottom: PropTypes.Requireable<boolean>;
            left: PropTypes.Requireable<boolean>;
            fixedHeight: PropTypes.Requireable<boolean>;
            fixedWidth: PropTypes.Requireable<boolean>;
        }>>;
    }>, context?: any): {
        render(): JSX.Element;
        context: any;
        setState<K extends never>(state: {} | ((prevState: Readonly<{}>, props: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>) => {} | Pick<{}, K> | null) | Pick<{}, K> | null, callback?: (() => void) | undefined): void;
        forceUpdate(callback?: (() => void) | undefined): void;
        readonly props: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>> & Readonly<{
            children?: React.ReactNode;
        }>;
        state: Readonly<{}>;
        refs: {
            [key: string]: React.ReactInstance;
        };
        componentDidMount?(): void;
        shouldComponentUpdate?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextState: Readonly<{}>, nextContext: any): boolean;
        componentWillUnmount?(): void;
        componentDidCatch?(error: Error, errorInfo: React.ErrorInfo): void;
        getSnapshotBeforeUpdate?(prevProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, prevState: Readonly<{}>): any;
        componentDidUpdate?(prevProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, prevState: Readonly<{}>, snapshot?: any): void;
        componentWillMount?(): void;
        UNSAFE_componentWillMount?(): void;
        componentWillReceiveProps?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextContext: any): void;
        UNSAFE_componentWillReceiveProps?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextContext: any): void;
        componentWillUpdate?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextState: Readonly<{}>, nextContext: any): void;
        UNSAFE_componentWillUpdate?(nextProps: Readonly<PropTypes.InferProps<{
            style: PropTypes.Requireable<PropTypes.InferProps<{
                color: PropTypes.Requireable<string | number>;
                shadowColor: PropTypes.Requireable<string | number>;
                shadowInner: PropTypes.Requireable<boolean>;
                shadowSpread: PropTypes.Requireable<number>;
                shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                    width: PropTypes.Requireable<number>;
                    height: PropTypes.Requireable<number>;
                }>>;
                shadowOpacity: PropTypes.Requireable<number>;
                shadowRadius: PropTypes.Requireable<number>;
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
                top: PropTypes.Requireable<number>;
                left: PropTypes.Requireable<number>;
                right: PropTypes.Requireable<number>;
                bottom: PropTypes.Requireable<number>;
                minWidth: PropTypes.Requireable<number>;
                maxWidth: PropTypes.Requireable<number>;
                minHeight: PropTypes.Requireable<number>;
                maxHeight: PropTypes.Requireable<number>;
                margin: PropTypes.Requireable<number>;
                marginVertical: PropTypes.Requireable<number>;
                marginHorizontal: PropTypes.Requireable<number>;
                marginTop: PropTypes.Requireable<number>;
                marginBottom: PropTypes.Requireable<number>;
                marginLeft: PropTypes.Requireable<number>;
                marginRight: PropTypes.Requireable<number>;
                padding: PropTypes.Requireable<number>;
                paddingVertical: PropTypes.Requireable<number>;
                paddingHorizontal: PropTypes.Requireable<number>;
                paddingTop: PropTypes.Requireable<number>;
                paddingBottom: PropTypes.Requireable<number>;
                paddingLeft: PropTypes.Requireable<number>;
                paddingRight: PropTypes.Requireable<number>;
                position: PropTypes.Requireable<string>;
                flexDirection: PropTypes.Requireable<string>;
                flexWrap: PropTypes.Requireable<string>;
                justifyContent: PropTypes.Requireable<string>;
                alignItems: PropTypes.Requireable<string>;
                alignSelf: PropTypes.Requireable<string>;
                overflow: PropTypes.Requireable<string>;
                overflowX: PropTypes.Requireable<string>;
                overflowY: PropTypes.Requireable<string>;
                flex: PropTypes.Requireable<number>;
                flexGrow: PropTypes.Requireable<number>;
                flexShrink: PropTypes.Requireable<number>;
                flexBasis: PropTypes.Requireable<number>;
                aspectRatio: PropTypes.Requireable<number>;
                zIndex: PropTypes.Requireable<number>;
                backfaceVisibility: PropTypes.Requireable<string>;
                backgroundColor: PropTypes.Requireable<string | number>;
                borderColor: PropTypes.Requireable<string | number>;
                borderTopColor: PropTypes.Requireable<string | number>;
                borderRightColor: PropTypes.Requireable<string | number>;
                borderBottomColor: PropTypes.Requireable<string | number>;
                borderLeftColor: PropTypes.Requireable<string | number>;
                borderRadius: PropTypes.Requireable<number>;
                borderTopLeftRadius: PropTypes.Requireable<number>;
                borderTopRightRadius: PropTypes.Requireable<number>;
                borderBottomLeftRadius: PropTypes.Requireable<number>;
                borderBottomRightRadius: PropTypes.Requireable<number>;
                borderStyle: PropTypes.Requireable<string>;
                borderTopStyle: PropTypes.Requireable<string>;
                borderRightStyle: PropTypes.Requireable<string>;
                borderBottomStyle: PropTypes.Requireable<string>;
                borderLeftStyle: PropTypes.Requireable<string>;
                borderWidth: PropTypes.Requireable<number>;
                borderTopWidth: PropTypes.Requireable<number>;
                borderRightWidth: PropTypes.Requireable<number>;
                borderBottomWidth: PropTypes.Requireable<number>;
                borderLeftWidth: PropTypes.Requireable<number>;
                opacity: PropTypes.Requireable<number>;
                transform: PropTypes.Requireable<string>;
                transformOrigin: PropTypes.Requireable<string>;
            }>>;
            name: PropTypes.Requireable<string>;
            overrides: PropTypes.Requireable<{
                [x: string]: string | ((...args: any[]) => any) | null | undefined;
            }>;
            resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
                top: PropTypes.Requireable<boolean>;
                right: PropTypes.Requireable<boolean>;
                bottom: PropTypes.Requireable<boolean>;
                left: PropTypes.Requireable<boolean>;
                fixedHeight: PropTypes.Requireable<boolean>;
                fixedWidth: PropTypes.Requireable<boolean>;
            }>>;
        }>>, nextState: Readonly<{}>, nextContext: any): void;
    };
    displayName: string;
    propTypes: {
        style: PropTypes.Requireable<PropTypes.InferProps<{
            color: PropTypes.Requireable<string | number>;
            shadowColor: PropTypes.Requireable<string | number>;
            shadowInner: PropTypes.Requireable<boolean>;
            shadowSpread: PropTypes.Requireable<number>;
            shadowOffset: PropTypes.Requireable<PropTypes.InferProps<{
                width: PropTypes.Requireable<number>;
                height: PropTypes.Requireable<number>;
            }>>;
            shadowOpacity: PropTypes.Requireable<number>;
            shadowRadius: PropTypes.Requireable<number>;
            width: PropTypes.Requireable<number>;
            height: PropTypes.Requireable<number>;
            top: PropTypes.Requireable<number>;
            left: PropTypes.Requireable<number>;
            right: PropTypes.Requireable<number>;
            bottom: PropTypes.Requireable<number>;
            minWidth: PropTypes.Requireable<number>;
            maxWidth: PropTypes.Requireable<number>;
            minHeight: PropTypes.Requireable<number>;
            maxHeight: PropTypes.Requireable<number>;
            margin: PropTypes.Requireable<number>;
            marginVertical: PropTypes.Requireable<number>;
            marginHorizontal: PropTypes.Requireable<number>;
            marginTop: PropTypes.Requireable<number>;
            marginBottom: PropTypes.Requireable<number>;
            marginLeft: PropTypes.Requireable<number>;
            marginRight: PropTypes.Requireable<number>;
            padding: PropTypes.Requireable<number>;
            paddingVertical: PropTypes.Requireable<number>;
            paddingHorizontal: PropTypes.Requireable<number>;
            paddingTop: PropTypes.Requireable<number>;
            paddingBottom: PropTypes.Requireable<number>;
            paddingLeft: PropTypes.Requireable<number>;
            paddingRight: PropTypes.Requireable<number>;
            position: PropTypes.Requireable<string>;
            flexDirection: PropTypes.Requireable<string>;
            flexWrap: PropTypes.Requireable<string>;
            justifyContent: PropTypes.Requireable<string>;
            alignItems: PropTypes.Requireable<string>;
            alignSelf: PropTypes.Requireable<string>;
            overflow: PropTypes.Requireable<string>;
            overflowX: PropTypes.Requireable<string>;
            overflowY: PropTypes.Requireable<string>;
            flex: PropTypes.Requireable<number>;
            flexGrow: PropTypes.Requireable<number>;
            flexShrink: PropTypes.Requireable<number>;
            flexBasis: PropTypes.Requireable<number>;
            aspectRatio: PropTypes.Requireable<number>;
            zIndex: PropTypes.Requireable<number>;
            backfaceVisibility: PropTypes.Requireable<string>;
            backgroundColor: PropTypes.Requireable<string | number>;
            borderColor: PropTypes.Requireable<string | number>;
            borderTopColor: PropTypes.Requireable<string | number>;
            borderRightColor: PropTypes.Requireable<string | number>;
            borderBottomColor: PropTypes.Requireable<string | number>;
            borderLeftColor: PropTypes.Requireable<string | number>;
            borderRadius: PropTypes.Requireable<number>;
            borderTopLeftRadius: PropTypes.Requireable<number>;
            borderTopRightRadius: PropTypes.Requireable<number>;
            borderBottomLeftRadius: PropTypes.Requireable<number>;
            borderBottomRightRadius: PropTypes.Requireable<number>;
            borderStyle: PropTypes.Requireable<string>;
            borderTopStyle: PropTypes.Requireable<string>;
            borderRightStyle: PropTypes.Requireable<string>;
            borderBottomStyle: PropTypes.Requireable<string>;
            borderLeftStyle: PropTypes.Requireable<string>;
            borderWidth: PropTypes.Requireable<number>;
            borderTopWidth: PropTypes.Requireable<number>;
            borderRightWidth: PropTypes.Requireable<number>;
            borderBottomWidth: PropTypes.Requireable<number>;
            borderLeftWidth: PropTypes.Requireable<number>;
            opacity: PropTypes.Requireable<number>;
            transform: PropTypes.Requireable<string>;
            transformOrigin: PropTypes.Requireable<string>;
        }>>;
        name: PropTypes.Requireable<string>;
        overrides: PropTypes.Requireable<{
            [x: string]: string | ((...args: any[]) => any) | null | undefined;
        }>;
        resizingConstraint: PropTypes.Requireable<PropTypes.InferProps<{
            top: PropTypes.Requireable<boolean>;
            right: PropTypes.Requireable<boolean>;
            bottom: PropTypes.Requireable<boolean>;
            left: PropTypes.Requireable<boolean>;
            fixedHeight: PropTypes.Requireable<boolean>;
            fixedWidth: PropTypes.Requireable<boolean>;
        }>>;
    };
    symbolID: string;
    masterName: string;
    contextType?: React.Context<any> | undefined;
} | undefined;
export {};
